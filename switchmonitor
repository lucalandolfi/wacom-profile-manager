#!/bin/bash

set -x

# Script data
DATA_DIR="$HOME/.local/share/wacom-profile-manager"

# State file, save the last set profile
STATE="${DATA_DIR}/current_output"

if [[ ! -d "${DATA_DIR}" ]]; then
    mkdir -p "${DATA_DIR}"
fi

# Load device names
source "${DATA_DIR}/devices.sh"

# Detect active monitors
declare -a OUTPUTS
OUTPUTS=($(xrandr --listactivemonitors | tail -n +2 | cut -d' ' -f6))

# Read current output from state file
current_output () {
    local current

    # state file does not exist
    if [[ ! -e $STATE ]]; then
        current=''
    else
        # check validity of current state
        current=`cat $STATE`
        found=0
        for i in "${OUTPUTS[@]}"; do
            if [[ "$i" == "$current" ]]; then
                found=1
                break
            fi
        done

        # saved output is not valid (either 
        # is not connected or garbage)
        if [[ $found -eq 0 ]]; then
            current=''
            rm -f "$STATE"
        fi
    fi

    echo "$current"
}

set_output () {
    STYLUS='HUION Huion Tablet_HS611 stylus'
    xsetwacom set "$STYLUS" MapToOutput "$1"
    echo "Map to: $1"
    echo "$1" > "$STATE"
}

iterate_outputs () {
    local current="$(current_output)"
    len=${#OUTPUTS[@]}

    # If current output cannot be determined, start from the
    # first detected
    if [[ -z "$current" ]]; then
        p=${OUTPUTS[0]}
    else
        # find next valid output
        switch=0
        i=0
        while :
        do
            if [[ $switch -eq 1 ]]; then
                p="${OUTPUTS[$i]}"
                break
            fi
            if [[ ${OUTPUTS[$i]} == "$current" ]]; then
                switch=1
            fi
            let "i=(i+1)%$len"
        done
    fi
    set_output "$p"
}

iterate_outputs
